//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp.PrintPaymentServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PrintPaymentServiceReference.IPrintPaymentService")]
    public interface IPrintPaymentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentId", ReplyAction="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentIdResponse")]
        int AddTransactionByStudentId(int id, string source, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentId", ReplyAction="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentIdResponse")]
        System.Threading.Tasks.Task<int> AddTransactionByStudentIdAsync(int id, string source, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentUId", ReplyAction="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentUIdResponse")]
        int AddTransactionByStudentUId(int uid, string source, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentUId", ReplyAction="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentUIdResponse")]
        System.Threading.Tasks.Task<int> AddTransactionByStudentUIdAsync(int uid, string source, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentCardId", ReplyAction="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentCardIdResponse")]
        int AddTransactionByStudentCardId(int cardid, string source, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentCardId", ReplyAction="http://tempuri.org/IPrintPaymentService/AddTransactionByStudentCardIdResponse")]
        System.Threading.Tasks.Task<int> AddTransactionByStudentCardIdAsync(int cardid, string source, double amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPrintPaymentServiceChannel : ConsoleApp.PrintPaymentServiceReference.IPrintPaymentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintPaymentServiceClient : System.ServiceModel.ClientBase<ConsoleApp.PrintPaymentServiceReference.IPrintPaymentService>, ConsoleApp.PrintPaymentServiceReference.IPrintPaymentService {
        
        public PrintPaymentServiceClient() {
        }
        
        public PrintPaymentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrintPaymentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintPaymentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintPaymentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddTransactionByStudentId(int id, string source, double amount) {
            return base.Channel.AddTransactionByStudentId(id, source, amount);
        }
        
        public System.Threading.Tasks.Task<int> AddTransactionByStudentIdAsync(int id, string source, double amount) {
            return base.Channel.AddTransactionByStudentIdAsync(id, source, amount);
        }
        
        public int AddTransactionByStudentUId(int uid, string source, double amount) {
            return base.Channel.AddTransactionByStudentUId(uid, source, amount);
        }
        
        public System.Threading.Tasks.Task<int> AddTransactionByStudentUIdAsync(int uid, string source, double amount) {
            return base.Channel.AddTransactionByStudentUIdAsync(uid, source, amount);
        }
        
        public int AddTransactionByStudentCardId(int cardid, string source, double amount) {
            return base.Channel.AddTransactionByStudentCardId(cardid, source, amount);
        }
        
        public System.Threading.Tasks.Task<int> AddTransactionByStudentCardIdAsync(int cardid, string source, double amount) {
            return base.Channel.AddTransactionByStudentCardIdAsync(cardid, source, amount);
        }
    }
}
